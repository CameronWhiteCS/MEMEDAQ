[{"/home/cameron/Desktop/memedaq/memedaq-client/src/index.js":"1","/home/cameron/Desktop/memedaq/memedaq-client/src/App.js":"2","/home/cameron/Desktop/memedaq/memedaq-client/src/reportWebVitals.js":"3","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Navigation.js":"4","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Signup.js":"5","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Signin.js":"6","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Home.js":"7","/home/cameron/Desktop/memedaq/memedaq-client/src/components/ErrorModal.js":"8","/home/cameron/Desktop/memedaq/memedaq-client/src/session.js":"9","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Profile.js":"10","/home/cameron/Desktop/memedaq/memedaq-client/src/components/About.js":"11","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Stonks.js":"12","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Portfolio.js":"13","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Meme.js":"14","/home/cameron/Desktop/memedaq/memedaq-client/src/components/ManageMeme.js":"15","/home/cameron/Desktop/memedaq/memedaq-client/src/components/News.js":"16","/home/cameron/Desktop/memedaq/memedaq-client/src/components/ViewArticle.js":"17","/home/cameron/Desktop/memedaq/memedaq-client/src/components/CreateArticle.js":"18","/home/cameron/Desktop/memedaq/memedaq-client/src/components/ControlPanel.js":"19","/home/cameron/Desktop/memedaq/memedaq-client/src/components/EditArticle.js":"20","/home/cameron/Desktop/memedaq/memedaq-client/src/components/CreateMeme.js":"21","/home/cameron/Desktop/memedaq/memedaq-client/src/components/ViewMeme.js":"22","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Highscores.js":"23"},{"size":500,"mtime":1609547214747,"results":"24","hashOfConfig":"25"},{"size":4361,"mtime":1609843894395,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1609547214747,"results":"27","hashOfConfig":"25"},{"size":3148,"mtime":1609849614660,"results":"28","hashOfConfig":"25"},{"size":1746,"mtime":1609759388245,"results":"29","hashOfConfig":"25"},{"size":1679,"mtime":1609743881504,"results":"30","hashOfConfig":"25"},{"size":299,"mtime":1609961255741,"results":"31","hashOfConfig":"25"},{"size":709,"mtime":1609577073101,"results":"32","hashOfConfig":"25"},{"size":246,"mtime":1609621282812,"results":"33","hashOfConfig":"25"},{"size":953,"mtime":1609843474439,"results":"34","hashOfConfig":"25"},{"size":1847,"mtime":1609848972262,"results":"35","hashOfConfig":"25"},{"size":1422,"mtime":1609840581299,"results":"36","hashOfConfig":"25"},{"size":2297,"mtime":1609840729242,"results":"37","hashOfConfig":"25"},{"size":2673,"mtime":1609840634063,"results":"38","hashOfConfig":"25"},{"size":2348,"mtime":1609840847337,"results":"39","hashOfConfig":"25"},{"size":1679,"mtime":1609841649149,"results":"40","hashOfConfig":"25"},{"size":1065,"mtime":1609841853408,"results":"41","hashOfConfig":"25"},{"size":1666,"mtime":1609834583245,"results":"42","hashOfConfig":"25"},{"size":754,"mtime":1609836673474,"results":"43","hashOfConfig":"25"},{"size":2325,"mtime":1609834838323,"results":"44","hashOfConfig":"25"},{"size":2089,"mtime":1609839267068,"results":"45","hashOfConfig":"25"},{"size":1193,"mtime":1609841843896,"results":"46","hashOfConfig":"25"},{"size":1639,"mtime":1609844303343,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"n36pe0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"50"},"/home/cameron/Desktop/memedaq/memedaq-client/src/index.js",[],["107","108"],"/home/cameron/Desktop/memedaq/memedaq-client/src/App.js",["109"],"import './App.css';\n\n\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nimport Home from \"./components/Home\";\nimport Signup from \"./components/Signup.js\";\nimport Signin from \"./components/Signin.js\";\nimport ErrorModal from \"./components/ErrorModal.js\";\nimport Navigation from \"./components/Navigation.js\";\nimport Profile from './components/Profile.js';\nimport About from './components/About.js';\nimport Stonks from './components/Stonks.js';\nimport Portfolio from './components/Portfolio.js';\nimport ManageMeme from './components/ManageMeme.js';\nimport News from './components/News.js';\nimport ViewArticle from './components/ViewArticle.js';\nimport CreateArticle from './components/CreateArticle.js';\nimport ControlPanel from './components/ControlPanel.js';\nimport EditArticle from './components/EditArticle.js';\nimport CreateMeme from './components/CreateMeme.js';\nimport ViewMeme from './components/ViewMeme.js';\nimport Highscores from './components/Highscores.js';\n\n\nconst App = () => {\n\n  const [errorState, setErrorState] = useState({});\n\n  const handleError = (error) => {\n    if (error.response !== undefined) {\n      setErrorState({\n        visible: true,\n        title: `Error ${error.response.status}: ${error.response.statusText}`,\n        message: error.response.data\n      });\n    }\n  };\n\n  const [userData, setUserData] = useState({});\n\n  const loadUserData = () => {\n    axios.get('/api/v1/userdata/')\n      .then((res) => {\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        handleError(err);\n      })\n  }\n\n  const [signedIn, setSignedIn] = useState(false);\n\n  /* Checks to see if the client is signed in using a valid session token. */\n  /* If a valid session is present, a sequence of requests is executed. */\n  useEffect(() => {\n    axios.get('/api/v1/session/')\n      .then((res) => {\n        setSignedIn(true)\n        loadUserData();\n      })\n      .catch((err) => { })\n  }, []);\n\n  /* Styles */\n  const containerStyle = {\n    marginTop: \"15px\",\n  };\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Navigation signedIn={signedIn} userData={userData} />\n        <Container style={containerStyle}>\n          <ErrorModal errorState={errorState} setErrorState={setErrorState} />\n          <Switch>\n            <Route exact path=\"/signup\" render={() => (<Signup handleError={handleError} setSignedIn={setSignedIn} />)} />\n            <Route exact path=\"/signin\" render={() => (<Signin handleError={handleError} setSignedIn={setSignedIn} loadUserData={loadUserData} />)} />\n            <Route exact path=\"/\" render={() => <Home />} />\n            <Route exact path=\"/profile\" render={() => <Profile userData={userData} handleError={handleError} setSignedIn={setSignedIn} />} />\n            <Route exact path=\"/about\" render={() => <About />} />\n            <Route exact path=\"/stonks\" render={() => <Stonks signedIn={signedIn} />} />\n            <Route exact path=\"/meme/:id\" render={() => <ViewMeme handleError={handleError} userData={userData} />} />\n            <Route exact path=\"/news\" render={() => <News handleError={handleError} />} />\n            <Route exact path=\"/news/:id\" render={() => <ViewArticle userData={userData} handleError={handleError} />} />\n            <Route exact path=\"/highscores\" render={() => <Highscores handleError={handleError} />} />\n            {\n              signedIn &&\n              <React.Fragment>\n                <Route exact path=\"/portfolio\" render={() => <Portfolio setUserData={setUserData} />} />\n                <Route exact path=\"/manage/:id\" render={() => <ManageMeme userData={userData} handleError={handleError} loadUserData={loadUserData} />} />\n                <Route exact path=\"/news/:id/edit\" render={() => <EditArticle handleError={handleError} />} />\n                <Route exact path=\"/admin\" render={() => <ControlPanel />} />\n                <Route exact path=\"/admin/article/\" render={() => <CreateArticle handleError={handleError} />} />\n                <Route exact path=\"/admin/meme/\" render={() => <CreateMeme handleError={handleError} />} />\n              </React.Fragment>\n            }\n          </Switch>\n        </Container>\n      </Router>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","/home/cameron/Desktop/memedaq/memedaq-client/src/reportWebVitals.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/Navigation.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/Signup.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/Signin.js",["110"],"import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst Signin = (props) => {\n\n  const history = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: () => {\n      axios.post('/api/v1/signin/', formik.values)\n        .then((res) => {\n\n              new Promise(() => {\n                props.loadUserData();\n              })\n              .then(new Promise(() => {\n                props.setSignedIn(true);\n                history.push('/profile');\n              }));\n         \n        })\n        .catch((err) => {\n          props.handleError(err)\n        })\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <h1>Sign In</h1>\n      <hr />\n      <Form onSubmit={formik.handleSubmit}>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email address</Form.Label>\n          <Form.Control name=\"username\" id=\"username\" type=\"text\" placeholder=\"cow@cow.jp\" onChange={formik.handleChange} value={formik.values.username} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control name=\"password\" id=\"password\" type=\"password\" placeholder=\"m000_1!\" onChange={formik.handleChange} value={formik.values.password} />\n        </Form.Group>\n        <p className=\"text-muted\">Don't have an account? Sign up <Link to=\"/signup\">here</Link>.</p>\n        <Button type=\"submit\">Sign in</Button>\n      </Form>\n    </React.Fragment>\n  );\n\n}\n\nexport default Signin;\n","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Home.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/ErrorModal.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/session.js",[],["111","112"],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/Profile.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/About.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/Stonks.js",["113"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport Meme from './Meme.js';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst Stonks = (props) => {\n\n    const [memes, setMemes] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        axios.get('/api/v1/stonks/')\n            .then((res) => {\n                setMemes(res.data);\n            })\n            .catch((err) => {\n\n            })\n    }, [])\n\n\n    return (\n        <React.Fragment>\n            <h1>Stonks</h1>\n            <hr />\n\n            {\n                memes.map((meme, index) => {\n                    return (\n                        <React.Fragment key={index}>\n                            <h2><Link to={`/meme/${meme.id}`}>{meme.name}</Link></h2>\n                            <Meme key={index} meme={meme}>\n                                {props.signedIn &&\n                                    <Link to={`/manage/${meme.id}/`}>\n                                        <Button variant=\"primary\">INVEST</Button>\n                                    </Link>\n                                }\n                            </Meme>\n                            <br />\n                        </React.Fragment>\n                    );\n                })\n            }\n        </React.Fragment>\n    );\n\n}\n\nexport default Stonks;","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Portfolio.js",["114"],"import React, {useEffect, useState} from 'react';\nimport {Table, Button} from 'react-bootstrap'\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\n\nconst Portfolio = (props) => {\n\n    const [total, setTotal] = useState(0);\n    const [portfolio, setPortfolio] = useState([]);\n    const [userData, setUserData] = useState(null);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        axios.get('/api/v1/portfolio/')\n        .then((res) => {\n            setPortfolio(res.data);\n            let _total = 0;\n            res.data.forEach((item) => {\n                _total += item.price * item.quantity;\n            });\n            setTotal(_total);\n        })\n        .catch((err) => {\n\n        })\n    }, []);\n\n    useEffect(() => {\n        axios.get('/api/v1/userdata/')\n        .then((res) => {\n            setUserData(res.data)\n            props.setUserData(res.data);\n        })\n        .catch((err) => {\n\n        })\n    }, []);\n\n    return (\n        <React.Fragment>\n            <h1>Portfolio</h1>\n            <hr/>\n            <p>Total assets: {total + (userData === null ? 0 : userData.balance)}Ð</p>\n            <Table striped variant=\"light\">\n                <thead>\n                    <tr>\n                        <th>Meme</th>\n                        <th>Price (Ð)</th>\n                        <th>Quantity</th>\n                        <th>Total Value (Ð)</th>\n                        <th>Manage</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        portfolio.map((item, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{item.name}</td>\n                                    <td>{item.price}</td>\n                                    <td>{item.quantity}</td>\n                                    <td>{item.price * item.quantity} Ð</td>\n                                    <td><Button variant=\"primary\" onClick={() => history.push(`/manage/${item.id}`)}>Manage</Button></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </Table>\n        </React.Fragment>\n    );\n\n}\n\nexport default Portfolio;","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Meme.js",["115","116","117","118"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport * as Recharts from \"recharts/umd/Recharts\";\nconst LineChart = Recharts.LineChart;\nconst Line = Recharts.Line;\nconst YAxis = Recharts.YAxis;\nconst XAxis = Recharts.XAxis;\nconst CartesianGrid = Recharts.CartesianGrid;\nconst Tooltip = Recharts.Tooltip;\nconst Legend = Recharts.Legend;\nconst ResponsiveContainer = Recharts.ResponsiveContainer;\n\nconst Meme = (props) => {\n\n\n    const [chartData, setChartData] = useState(undefined);\n    const [days, setDays] = useState(7);\n\n    useEffect(() => {\n        if (props.meme.id !== undefined) {\n            axios.get(`/api/v1/price_history/?memeId=${props.meme.id}&NumDays=${days}`)\n                .then((res) => {\n\n                    console.log(res.data)\n                    let data = [];\n\n                    res.data.forEach((dataPoint, index) => {\n                        data.push({\n                            name: dataPoint.date,\n                            price: dataPoint.price\n                        })\n                    });\n\n                    setChartData(data);\n\n                })\n                .catch((err) => {\n                    //TODO    \n                })\n        }\n    }, [props.meme.id]);\n\n    return (\n        <div style={{ marginTop: '20px', marginBottom: '20px' }}>\n            <Row>\n                <Col xs={12} md={6} xl={3}>\n                    <img width={250} height={250} src={props.meme.image_url} />\n                    <br />\n                    <br />\n                </Col>\n                <Col xs={12} md={6} xl={9}>\n                    <p>Trading price: {props.meme.trading_price}</p>\n                    <p>Shares available: {props.meme.stock}</p>\n                    <p>Cringe: {props.meme.cringe ? \"Yes\" : \"No\"}</p>\n                    {props.children}\n                </Col>\n            </Row>\n\n            {chartData !== undefined &&\n\n                <React.Fragment>\n                    <ResponsiveContainer height={300} width=\"80%\">\n                        <LineChart data={chartData} margin={{ top: 5, right: 0, left: 0, bottom: 5 }}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line type=\"monotone\" dataKey=\"price\" stroke=\"#0095FF\" />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </React.Fragment>\n\n            }\n\n        </div>\n    );\n\n}\n\nexport default Meme;","/home/cameron/Desktop/memedaq/memedaq-client/src/components/ManageMeme.js",["119","120"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Meme from './Meme.js';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nconst ManageMeme = (props) => {\n\n\n    const { id } = useParams()\n\n    const [meme, setMeme] = useState({})\n    const [quantity, setQuantity] = useState(0)\n\n    const history = useHistory();\n\n    const onChange = (e) => {\n        if (!Number.isInteger(Number(e.target.value)) && e.target.value != '') {\n            e.target.value = quantity\n        } else {\n            setQuantity(e.target.value);\n        }\n    }\n\n    useEffect(() => {\n        axios.get(`/api/v1/meme/${id}/`)\n            .then((res) => {\n                setMeme(res.data);\n            })\n            .catch((err) => {\n                props.handleError(err);\n            })\n    }, []);\n\n    const buySell = (action) => {\n\n        axios.post(`/api/v1/${action}/`, {\n            memeId: meme.id,\n            quantity: quantity\n        })\n            .then((res) => {\n                props.loadUserData();\n                history.push('/portfolio/');\n            })\n            .catch((err) => {\n                props.handleError(err)\n            });\n    }\n\n    return (\n        <React.Fragment>\n            <h1>Invest/Sell {meme.name}</h1>\n            <Meme meme={meme}>\n                <p>You can afford: {Math.floor(props.userData.balance / meme.trading_price)}</p>\n                <Form onSubmit={(e) => e.preventDefault()}>\n                    <Row>\n                        <Col xs={12}>\n                            <Form.Group>\n                                <Form.Control name=\"quantity\" id=\"quantity\" placeholder={0} onChange={onChange}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={() => buySell('invest')} className=\"w-100\" >Buy</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button variant=\"danger\" className=\"w-100\" onClick={() => buySell('sell')}>Sell</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Meme>\n        </React.Fragment>\n    );\n\n}\n\nexport default ManageMeme;","/home/cameron/Desktop/memedaq/memedaq-client/src/components/News.js",["121"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nconst News = (props) => {\n\n    const [articles, setArticles] = useState([]);\n    const [page, setPage] = useState(1);\n\n    const loadArticles = (page) => {\n        axios.get(`/api/v1/news/${page}/`)\n            .then((res) => {\n                setArticles(res.data);\n            })\n            .catch(props.handleError);\n    }\n\n    const pageForward = () => {\n        if (articles.length > 0) {\n            setPage(page + 1);\n            loadArticles(page + 1);\n        }\n    }\n\n    const pageBack = () => {\n        if (page > 1) {\n            setPage(page - 1);\n            loadArticles(page - 1);\n        }\n    }\n\n    useEffect(() => loadArticles(1), []);\n\n    return (\n        <React.Fragment>\n            <h1>News</h1>\n            <hr />\n            {\n                articles.length > 0 && articles.map((article, index) => {\n                    return (\n                        <div key={index}>\n                            <h2><Link to={`/news/${article.id}`}>{article.title}</Link></h2>\n                            <p>{article.description}</p>\n                        </div>\n                    );\n                })\n            }\n            {\n                articles.length === 0 && \n                <p>There doesn't seem to be anything here ¯\\_(ツ)_/¯</p>\n            }\n            <Button onClick={pageBack} disabled={page <= 1}>{\"<--\"}</Button> &nbsp;\n            <Button onClick={pageForward} disabled={articles.length === 0}>{\"-->\"}</Button>\n        </React.Fragment>\n    );\n\n}\n\nexport default News;","/home/cameron/Desktop/memedaq/memedaq-client/src/components/ViewArticle.js",["122"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport {Button} from 'react-bootstrap';\n\nconst ViewArticle = (props) => {\n\n    const [article, setArticle] = useState({})\n    const { id } = useParams();\n\n    useEffect(() => {\n        if (id !== undefined) {\n            axios.get(`/api/v1/article/${id}/`)\n                .then((res) => {\n                    setArticle(res.data);\n                })\n                .catch(props.handleError);\n        }\n    }, [id]);\n\n    return (\n        <React.Fragment>\n            <h1>{article.title}</h1>\n            <hr />\n            <ReactMarkdown>\n                {article.text}\n            </ReactMarkdown>\n            <hr/>\n            <p>{article.creation_date}</p>\n            {props.userData.admin &&\n                <Link to={`/news/${id}/edit`}>\n                    <Button>Edit</Button>\n                </Link>\n            }\n        </React.Fragment>\n    );\n\n}\n\nexport default ViewArticle;","/home/cameron/Desktop/memedaq/memedaq-client/src/components/CreateArticle.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/ControlPanel.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/EditArticle.js",["123"],"import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { useFormik } from 'formik';\n\nconst EditArticle = (props) => {\n\n    const history = useHistory();\n    const { id } = useParams();\n\n    const formik = useFormik({\n        initialValues: {\n            title: 'asdf',\n            description: '',\n            text: '',\n            id: id\n        },\n        onSubmit: () => {\n            axios.post('/api/v1/article/edit/', formik.values)\n                .then((res) => {\n                    history.push(`/news/${id}`);\n                })\n                .catch(props.handleError);\n        }\n    })\n\n    useEffect(() => {\n        axios.get(`/api/v1/article/${id}/`)\n        .then((res) => {\n            formik.setFieldValue('title', res.data.title);\n            const values = {\n                title: res.data.title,\n                description: res.data.description,\n                text: res.data.text,\n                id: formik.values.id\n            }\n            formik.setValues(values);\n\n        })\n        .catch(props.handleError);\n    }, []);\n\n    return (\n        <React.Fragment>\n            <h1>Edit Article</h1>\n            <hr />\n            <Form onSubmit={formik.handleSubmit}>\n                <Form.Group>\n                    <Form.Label htmlFor=\"title\">Title</Form.Label>\n                    <Form.Control className=\"w-100\" name=\"title\" id=\"title\" value={formik.values.title} onChange={formik.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label htmlFor=\"description\">Description</Form.Label>\n                    <Form.Control className=\"w-100\" name=\"description\" id=\"description\" value={formik.values.description} onChange={formik.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label htmlFor=\"text\">Text</Form.Label>\n                    <textarea rows=\"10\" className=\"form-control\" name=\"text\" id=\"text\" value={formik.values.text} onChange={formik.handleChange} />\n                </Form.Group>\n                <Button type=\"Submit\">Submit</Button>\n            </Form>\n        </React.Fragment>\n\n    );\n\n\n}\n\nexport default EditArticle;","/home/cameron/Desktop/memedaq/memedaq-client/src/components/CreateMeme.js",[],"/home/cameron/Desktop/memedaq/memedaq-client/src/components/ViewMeme.js",["124"],"import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Meme from './Meme';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\n\nconst ViewMeme = (props) => {\n\n    const [meme, setMeme] = useState({});\n    const { id } = useParams();\n    const history = useHistory();\n\n    useEffect(() => {\n        axios.get(`/api/v1/meme/${id}/`)\n            .then((res) => {\n                setMeme(res.data);\n            })\n            .catch(props.handleError);\n    }, []);\n\n    const deleteMeme = () => {\n        axios.post('/api/v1/meme/delete/', {id: id})\n        .then((res) => {\n            history.push('/stonks/');\n        })\n        .catch(props.handleError)\n    }\n\n    return (\n        <React.Fragment>\n            <h1>{meme.name}</h1>\n            <hr />\n            <Meme meme={meme}>\n                <p>Creation date: {meme.creation_date}</p>\n                {props.userData.admin &&\n                    <Button onClick={deleteMeme} variant=\"danger\">\n                        Delete Meme\n                    </Button>\n                }\n            </Meme>\n        </React.Fragment>\n    );\n\n}\n\nexport default ViewMeme;","/home/cameron/Desktop/memedaq/memedaq-client/src/components/Highscores.js",["125"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst Highscores = (props) => {\n\n    const [highscores, setHighscores] = useState([]);\n\n    useEffect(() => {\n        axios.get('/api/v1/highscores/')\n        .then((res) => {\n            setHighscores(res.data);\n        })\n        .catch(props.handleError);\n    }, []);\n\n    return (\n        <React.Fragment>\n            <h1>High Scores</h1>\n            <hr />\n            {highscores.length > 0 &&\n                <React.Fragment>\n\n                    <Table variant=\"light\" striped>\n                        <thead>\n                            <tr>\n                                <th>Player</th>\n                                <th>Balance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                highscores.map((player, index) => {\n                                    return (\n                                        <tr key={index}>\n                                            <td>{player.username}</td>\n                                            <td>{player.balance}Ð</td>\n                                        </tr>\n                                    );\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                </React.Fragment>\n            }\n            {\n                highscores.length === 0 &&\n                <p>Loading...</p>\n            }\n        </React.Fragment>\n    );\n\n}\n\nexport default Highscores;",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":68,"column":6,"nodeType":"132","endLine":68,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":15},{"ruleId":"126","replacedBy":"138"},{"ruleId":"128","replacedBy":"139"},{"ruleId":"134","severity":1,"message":"140","line":11,"column":11,"nodeType":"136","messageId":"137","endLine":11,"endColumn":18},{"ruleId":"130","severity":1,"message":"141","line":38,"column":8,"nodeType":"132","endLine":38,"endColumn":10,"suggestions":"142"},{"ruleId":"134","severity":1,"message":"143","line":3,"column":20,"nodeType":"136","messageId":"137","endLine":3,"endColumn":26},{"ruleId":"134","severity":1,"message":"144","line":19,"column":18,"nodeType":"136","messageId":"137","endLine":19,"endColumn":25},{"ruleId":"130","severity":1,"message":"145","line":43,"column":8,"nodeType":"132","endLine":43,"endColumn":23,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":49,"column":21,"nodeType":"149","endLine":49,"endColumn":80},{"ruleId":"150","severity":1,"message":"151","line":18,"column":73,"nodeType":"152","messageId":"153","endLine":18,"endColumn":75},{"ruleId":"130","severity":1,"message":"154","line":33,"column":8,"nodeType":"132","endLine":33,"endColumn":10,"suggestions":"155"},{"ruleId":"130","severity":1,"message":"156","line":32,"column":38,"nodeType":"132","endLine":32,"endColumn":40,"suggestions":"157"},{"ruleId":"130","severity":1,"message":"158","line":20,"column":8,"nodeType":"132","endLine":20,"endColumn":12,"suggestions":"159"},{"ruleId":"130","severity":1,"message":"160","line":43,"column":8,"nodeType":"132","endLine":43,"endColumn":10,"suggestions":"161"},{"ruleId":"130","severity":1,"message":"162","line":19,"column":8,"nodeType":"132","endLine":19,"endColumn":10,"suggestions":"163"},{"ruleId":"130","severity":1,"message":"158","line":15,"column":8,"nodeType":"132","endLine":15,"endColumn":10,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserData'. Either include it or remove the dependency array.","ArrayExpression",["167"],"no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar",["165"],["166"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["168"],"'Button' is defined but never used.","'setDays' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'days'. Either include it or remove the dependency array.",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["170"],"React Hook useEffect has a missing dependency: 'loadArticles'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'props.handleError'. Either include it or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'formik', 'id', and 'props.handleError'. Either include them or remove the dependency array.",["173"],"React Hook useEffect has missing dependencies: 'id' and 'props.handleError'. Either include them or remove the dependency array.",["174"],["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"186","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [loadUserData]",{"range":"193","text":"194"},"Update the dependencies array to be: [props]",{"range":"195","text":"196"},"Update the dependencies array to be: [days, props.meme.id]",{"range":"197","text":"198"},"Update the dependencies array to be: [id, props]",{"range":"199","text":"200"},"Update the dependencies array to be: [loadArticles]",{"range":"201","text":"202"},"Update the dependencies array to be: [id, props.handleError]",{"range":"203","text":"204"},"Update the dependencies array to be: [formik, id, props.handleError]",{"range":"205","text":"206"},{"range":"207","text":"204"},"Update the dependencies array to be: [props.handleError]",{"range":"208","text":"209"},[2068,2070],"[loadUserData]",[953,955],"[props]",[1285,1300],"[days, props.meme.id]",[875,877],"[id, props]",[815,817],"[loadArticles]",[586,590],"[id, props.handleError]",[1208,1210],"[formik, id, props.handleError]",[535,537],[387,389],"[props.handleError]"]